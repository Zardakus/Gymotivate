// <auto-generated />
using Gymotivate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gymotivate.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20231019140653_CriandoTabelasTreinoExercicios")]
    partial class CriandoTabelasTreinoExercicios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gymotivate.Models.CadastreModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cadastre");
                });

            modelBuilder.Entity("Gymotivate.Models.ConquistasModel", b =>
                {
                    b.Property<int>("ConquistasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConquistasId"));

                    b.Property<int>("NameConquistasId")
                        .HasColumnType("int");

                    b.Property<bool>("PossuiConquista")
                        .HasColumnType("bit");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ConquistasId");

                    b.HasIndex("NameConquistasId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Conquistas");
                });

            modelBuilder.Entity("Gymotivate.Models.ExercicioModel", b =>
                {
                    b.Property<int>("ExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExercicioId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExercicioId");

                    b.ToTable("Exercicio");
                });

            modelBuilder.Entity("Gymotivate.Models.GamesModel", b =>
                {
                    b.Property<int>("GamesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GamesId"));

                    b.Property<int>("AcertosBracos")
                        .HasColumnType("int");

                    b.Property<int>("AcertosCostas")
                        .HasColumnType("int");

                    b.Property<int>("AcertosPeitos")
                        .HasColumnType("int");

                    b.Property<int>("AcertosPernas")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("GamesId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Acertos");
                });

            modelBuilder.Entity("Gymotivate.Models.GrupoConquistasModel", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("GroupExpTotal")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("GrupoConquistas");
                });

            modelBuilder.Entity("Gymotivate.Models.NameConquistasModel", b =>
                {
                    b.Property<int>("NameConquistasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NameConquistasId"));

                    b.Property<int>("ConquistaExp")
                        .HasColumnType("int");

                    b.Property<int>("GrupoConquistasGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tier")
                        .HasColumnType("int");

                    b.HasKey("NameConquistasId");

                    b.HasIndex("GrupoConquistasGroupId");

                    b.ToTable("NameConquistas");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoDiaSemanaModel", b =>
                {
                    b.Property<int>("TreinoDiaSemanaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreinoDiaSemanaId"));

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreinoId1")
                        .HasColumnType("int");

                    b.HasKey("TreinoDiaSemanaId");

                    b.HasIndex("TreinoId1");

                    b.ToTable("TreinoDiaSemana");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoExercicioModel", b =>
                {
                    b.Property<int>("TreinoExercicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreinoExercicioId"));

                    b.Property<int>("ExercicioId1")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("TreinoDiaSemanaId1")
                        .HasColumnType("int");

                    b.HasKey("TreinoExercicioId");

                    b.HasIndex("ExercicioId1");

                    b.HasIndex("TreinoDiaSemanaId1");

                    b.ToTable("TreinoExercicio");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoModel", b =>
                {
                    b.Property<int>("TreinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreinoId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserIdId")
                        .HasColumnType("int");

                    b.HasKey("TreinoId");

                    b.HasIndex("UserIdId");

                    b.ToTable("Treino");
                });

            modelBuilder.Entity("Gymotivate.Models.ConquistasModel", b =>
                {
                    b.HasOne("Gymotivate.Models.NameConquistasModel", "NameConquistas")
                        .WithMany("Conquistas")
                        .HasForeignKey("NameConquistasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymotivate.Models.CadastreModel", "Usuario")
                        .WithMany("Conquistas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NameConquistas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Gymotivate.Models.GamesModel", b =>
                {
                    b.HasOne("Gymotivate.Models.CadastreModel", "Usuario")
                        .WithMany("Games")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Gymotivate.Models.NameConquistasModel", b =>
                {
                    b.HasOne("Gymotivate.Models.GrupoConquistasModel", "GrupoConquistas")
                        .WithMany("ConquistasName")
                        .HasForeignKey("GrupoConquistasGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoConquistas");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoDiaSemanaModel", b =>
                {
                    b.HasOne("Gymotivate.Models.TreinoModel", "TreinoId")
                        .WithMany("TreinoDiaSemana")
                        .HasForeignKey("TreinoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreinoId");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoExercicioModel", b =>
                {
                    b.HasOne("Gymotivate.Models.ExercicioModel", "ExercicioId")
                        .WithMany("TreinoExercicio")
                        .HasForeignKey("ExercicioId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymotivate.Models.TreinoDiaSemanaModel", "TreinoDiaSemanaId")
                        .WithMany("TreinoExercicio")
                        .HasForeignKey("TreinoDiaSemanaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExercicioId");

                    b.Navigation("TreinoDiaSemanaId");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoModel", b =>
                {
                    b.HasOne("Gymotivate.Models.CadastreModel", "UserId")
                        .WithMany("Treino")
                        .HasForeignKey("UserIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("Gymotivate.Models.CadastreModel", b =>
                {
                    b.Navigation("Conquistas");

                    b.Navigation("Games");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("Gymotivate.Models.ExercicioModel", b =>
                {
                    b.Navigation("TreinoExercicio");
                });

            modelBuilder.Entity("Gymotivate.Models.GrupoConquistasModel", b =>
                {
                    b.Navigation("ConquistasName");
                });

            modelBuilder.Entity("Gymotivate.Models.NameConquistasModel", b =>
                {
                    b.Navigation("Conquistas");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoDiaSemanaModel", b =>
                {
                    b.Navigation("TreinoExercicio");
                });

            modelBuilder.Entity("Gymotivate.Models.TreinoModel", b =>
                {
                    b.Navigation("TreinoDiaSemana");
                });
#pragma warning restore 612, 618
        }
    }
}
